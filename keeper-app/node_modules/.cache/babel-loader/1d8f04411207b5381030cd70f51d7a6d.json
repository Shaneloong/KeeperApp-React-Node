{"ast":null,"code":"import _slicedToArray from \"G:\\\\Real Desktop\\\\Backend JS\\\\Shane-Keeper\\\\keeper-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"G:\\\\Real Desktop\\\\Backend JS\\\\Shane-Keeper\\\\keeper-app\\\\src\\\\components\\\\App.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\n\nfunction App() {\n  var _this = this;\n\n  var _useState = useState(localStorage.getItem(\"loggedIn\") || false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loggedIn = _useState2[0],\n      setLoggedIn = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      registerWanted = _useState4[0],\n      setRegisterWanted = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      registerSuccess = _useState6[0],\n      setRegisterSuccess = _useState6[1];\n\n  var _useState7 = useState(localStorage.getItem(\"currentUser\") || \"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentUser = _useState8[0],\n      setCurrentUser = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      notes = _useState10[0],\n      setNotes = _useState10[1];\n\n  function registerClick() {\n    setRegisterWanted(function (previousState) {\n      return !previousState;\n    });\n  }\n\n  function registerAccount(credentials) {\n    console.log(credentials);\n    fetch('/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setRegisterSuccess(data.success);\n      console.log(data);\n    });\n  }\n\n  function checkLogin(credentials) {\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      if (user.success) {\n        setLoggedIn(true);\n        setCurrentUser(user.userID);\n        localStorage.setItem(\"loggedIn\", true);\n        localStorage.setItem(\"currentUser\", user.userID);\n        fetchNotes(user.userID);\n      }\n    });\n  }\n\n  function fetchNotes(userID) {\n    console.log(loggedIn);\n    fetch(\"/notes/\" + userID).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setNotes(result.notes);\n      return;\n    });\n  }\n\n  function logout() {\n    setLoggedIn(false);\n    localStorage.setItem(\"loggedIn\", false);\n    setCurrentUser(\"\");\n    localStorage.setItem(\"currentUser\", \"\");\n    setNotes([]);\n  }\n\n  useEffect(function () {\n    if (currentUser !== \"\" && currentUser !== \"undefined\") {\n      fetch(\"/notes/\" + currentUser).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        setNotes(result.notes);\n        return;\n      });\n    }\n  }, []);\n\n  function addNote(newNote) {\n    newNote.id = currentUser;\n    fetch(\"/create\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newNote)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.success) {\n        setTimeout(fetchNotes(currentUser), 3000);\n      }\n    });\n  }\n\n  function deleteNote(id) {\n    fetch(\"/delete\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        noteIndex: id,\n        userID: currentUser\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.success) {\n        setTimeout(fetchNotes(currentUser), 3000);\n      }\n    });\n  }\n\n  if (currentUser !== \"\" && currentUser !== \"undefined\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      clicked: logout,\n      isLoggedIn: currentUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CreateArea, {\n      id: currentUser,\n      onAdd: addNote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }), notes.map(function (noteItem, index) {\n      return /*#__PURE__*/React.createElement(Note, {\n        key: index,\n        id: index,\n        title: noteItem.title,\n        content: noteItem.content,\n        onDelete: deleteNote,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      });\n    }), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }));\n  } else if (registerWanted) {\n    return /*#__PURE__*/React.createElement(Register, {\n      clicked: registerClick,\n      success: registerSuccess,\n      onSubmitForm: registerAccount,\n      isLoggedIn: loggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 14\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      isLoggedIn: loggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Login, {\n      onSubmitForm: checkLogin,\n      clicked: registerClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }));\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["G:/Real Desktop/Backend JS/Shane-Keeper/keeper-app/src/components/App.jsx"],"names":["React","useState","useEffect","Header","Footer","Note","CreateArea","Login","Register","App","localStorage","getItem","loggedIn","setLoggedIn","registerWanted","setRegisterWanted","registerSuccess","setRegisterSuccess","currentUser","setCurrentUser","notes","setNotes","registerClick","previousState","registerAccount","credentials","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","success","checkLogin","res","user","userID","setItem","fetchNotes","result","logout","addNote","newNote","id","setTimeout","deleteNote","noteIndex","map","noteItem","index","title","content"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\n\nfunction App() {\n\n  const [loggedIn, setLoggedIn] = useState((localStorage.getItem(\"loggedIn\")) || false);\n  const [registerWanted, setRegisterWanted] = useState(false);\n  const [registerSuccess, setRegisterSuccess] = useState(false);\n  const [currentUser, setCurrentUser] = useState(localStorage.getItem(\"currentUser\") || \"\");\n  const [notes, setNotes] = useState([]);\n\n  function registerClick(){\n    setRegisterWanted((previousState) => !previousState);\n  }\n\n  function registerAccount(credentials){\n    console.log(credentials);\n    fetch('/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    })\n    .then(response => response.json())\n    .then(data => {\n      setRegisterSuccess(data.success);\n      console.log(data);\n    })\n  }\n\n\n  function checkLogin(credentials){\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    })\n    .then((res) => res.json())\n    .then((user) => {\n      if(user.success){\n        setLoggedIn(true);\n        setCurrentUser(user.userID);\n        localStorage.setItem(\"loggedIn\", true);\n        localStorage.setItem(\"currentUser\", user.userID);\n        fetchNotes(user.userID);\n      }\n    })\n  }\n\n  function fetchNotes(userID){\n    console.log(loggedIn)\n    fetch(\"/notes/\" + userID)\n        .then((res) => {\n          return res.json();\n        })\n        .then((result) => {\n          setNotes(result.notes);\n          return;\n        })  \n  }\n\n  function logout(){\n    setLoggedIn(false);\n    localStorage.setItem(\"loggedIn\", false);\n    setCurrentUser(\"\");\n    localStorage.setItem(\"currentUser\", \"\");\n    setNotes([]);\n  }\n\n\n\n\n  \n  useEffect(() =>{\n    if(currentUser !== \"\" && currentUser !== \"undefined\"){\n      fetch(\"/notes/\" + currentUser)\n      .then((res) => {\n        return res.json();\n      })\n      .then((result) => {\n        setNotes(result.notes);\n        return;\n      })\n    }  \n  }, [])\n\n  function addNote(newNote) {\n    newNote.id = currentUser;\n\n    fetch(\"/create\", {\n      method: 'POST',\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newNote)\n    })\n    .then(response => response.json())\n    .then(data => {\n      if(data.success){\n        setTimeout(fetchNotes(currentUser), 3000);\n      }\n\n    })\n  }\n\n  function deleteNote(id) {\n\n    fetch(\"/delete\", {\n      method: 'POST',\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({noteIndex: id, userID: currentUser})\n    })\n    .then(response => response.json())\n    .then(data => {\n      if(data.success){\n        setTimeout(fetchNotes(currentUser), 3000);\n      }\n    })\n    \n  }\n\n    if(currentUser !== \"\" && currentUser !== \"undefined\"){\n      return (\n        <div>\n          <Header clicked={logout} isLoggedIn={currentUser}/>\n          <CreateArea id={currentUser} onAdd={addNote} />\n          {notes.map((noteItem, index) => {\n            return (\n              <Note\n                key={index}\n                id={index}\n                title={noteItem.title}\n                content={noteItem.content}\n                onDelete={deleteNote}\n              />\n            );\n          })}\n          <Footer />\n        </div>\n      );\n    }\n    else if(registerWanted){\n      return <Register clicked={registerClick} success={registerSuccess} onSubmitForm={registerAccount} isLoggedIn={loggedIn} />;\n    }\n    else {\n      return (\n        <div>\n          <Header isLoggedIn={loggedIn}/>\n          <Login onSubmitForm={checkLogin} clicked={registerClick} />\n          <Footer />\n        </div>\n      );\n    }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}