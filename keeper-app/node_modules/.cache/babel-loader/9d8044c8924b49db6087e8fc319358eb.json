{"ast":null,"code":"import _defineProperty from\"G:\\\\Real Desktop\\\\GitHub Repo\\\\Keeper-App\\\\keeper-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"G:\\\\Real Desktop\\\\GitHub Repo\\\\Keeper-App\\\\keeper-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"G:\\\\Real Desktop\\\\GitHub Repo\\\\Keeper-App\\\\keeper-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import AddIcon from\"@material-ui/icons/Add\";import Fab from\"@material-ui/core/Fab\";import Zoom from\"@material-ui/core/Zoom\";function CreateArea(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isFocus=_useState2[0],setFocus=_useState2[1];function FocusHandling(){setFocus(true);}var _useState3=useState({title:\"\",content:\"\"}),_useState4=_slicedToArray(_useState3,2),note=_useState4[0],setNote=_useState4[1];function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setNote(function(prevNote){return _objectSpread(_objectSpread({},prevNote),{},_defineProperty({},name,value));});}function submitNote(event){props.onAdd(note);setNote({title:\"\",content:\"\"});event.preventDefault();}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{className:\"create-note\"},isFocus&&/*#__PURE__*/React.createElement(\"input\",{name:\"title\",onChange:handleChange,value:note.title,placeholder:\"Title\"}),/*#__PURE__*/React.createElement(\"textarea\",{name:\"content\",onFocus:FocusHandling,onChange:handleChange,value:note.content,placeholder:\"Take a note...\",rows:isFocus?\"3\":\"1\"}),/*#__PURE__*/React.createElement(Zoom,{in:isFocus},/*#__PURE__*/React.createElement(Fab,{onClick:submitNote},/*#__PURE__*/React.createElement(AddIcon,null)))));}export default CreateArea;","map":{"version":3,"sources":["G:/Real Desktop/GitHub Repo/Keeper-App/keeper-app/src/components/CreateArea.jsx"],"names":["React","useState","AddIcon","Fab","Zoom","CreateArea","props","isFocus","setFocus","FocusHandling","title","content","note","setNote","handleChange","event","target","name","value","prevNote","submitNote","onAdd","preventDefault"],"mappings":"ohBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACzB,cAA4BL,QAAQ,CAAC,KAAD,CAApC,wCAAOM,OAAP,eAAgBC,QAAhB,eAEA,QAASC,CAAAA,aAAT,EAAyB,CACvBD,QAAQ,CAAC,IAAD,CAAR,CACD,CAED,eAAwBP,QAAQ,CAAC,CAC/BS,KAAK,CAAE,EADwB,CAE/BC,OAAO,CAAE,EAFsB,CAAD,CAAhC,yCAAOC,IAAP,eAAaC,OAAb,eAKA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC3B,kBAAwBA,KAAK,CAACC,MAA9B,CAAQC,IAAR,eAAQA,IAAR,CAAcC,KAAd,eAAcA,KAAd,CAEAL,OAAO,CAAC,SAACM,QAAD,CAAc,CACpB,sCACKA,QADL,wBAEGF,IAFH,CAEUC,KAFV,GAID,CALM,CAAP,CAMD,CAED,QAASE,CAAAA,UAAT,CAAoBL,KAApB,CAA2B,CACzBT,KAAK,CAACe,KAAN,CAAYT,IAAZ,EACAC,OAAO,CAAC,CACNH,KAAK,CAAE,EADD,CAENC,OAAO,CAAE,EAFH,CAAD,CAAP,CAIAI,KAAK,CAACO,cAAN,GACD,CAED,mBACE,4CACE,4BAAM,SAAS,CAAC,aAAhB,EACGf,OAAO,eACN,6BACE,IAAI,CAAC,OADP,CAEE,QAAQ,CAAEO,YAFZ,CAGE,KAAK,CAAEF,IAAI,CAACF,KAHd,CAIE,WAAW,CAAC,OAJd,EAFJ,cASE,gCACE,IAAI,CAAC,SADP,CAEE,OAAO,CAAED,aAFX,CAGE,QAAQ,CAAEK,YAHZ,CAIE,KAAK,CAAEF,IAAI,CAACD,OAJd,CAKE,WAAW,CAAC,gBALd,CAME,IAAI,CAAEJ,OAAO,CAAG,GAAH,CAAS,GANxB,EATF,cAiBE,oBAAC,IAAD,EAAM,EAAE,CAAEA,OAAV,eACE,oBAAC,GAAD,EAAK,OAAO,CAAEa,UAAd,eACE,oBAAC,OAAD,MADF,CADF,CAjBF,CADF,CADF,CA2BD,CAED,cAAef,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction CreateArea(props) {\n  const [isFocus, setFocus] = useState(false);\n\n  function FocusHandling() {\n    setFocus(true);\n  }\n\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n\n    setNote((prevNote) => {\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n\n  function submitNote(event) {\n    props.onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <form className=\"create-note\">\n        {isFocus && (\n          <input\n            name=\"title\"\n            onChange={handleChange}\n            value={note.title}\n            placeholder=\"Title\"\n          />\n        )}\n        <textarea\n          name=\"content\"\n          onFocus={FocusHandling}\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows={isFocus ? \"3\" : \"1\"}\n        />\n        <Zoom in={isFocus}>\n          <Fab onClick={submitNote}>\n            <AddIcon />\n          </Fab>\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n"]},"metadata":{},"sourceType":"module"}